table 'MEDIDAS PEDIDOS'
	lineageTag: 34dc8899-bb02-4664-a555-9427630b8c90

	/// SUMX(fPedido,fPedido[QTDE])
	measure 'TOTAL QTDE PEDIDOS' = SUMX(fPedido,fPedido[QTDE])
		lineageTag: 41584075-dbfc-4d22-b614-375d263801ca

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// 
	/// var FaturamentoGeral =
	/// CALCULATE(
	/// SUMX(fPedido,
	/// SWITCH(
	/// TRUE(),
	/// fPedido[VALOR_LIQUIDO_NF] <> BLANK(),
	/// ([VALOR_LIQUIDO_NF]*fPedido[QTDE_ATEND]),
	/// fPedido[VLR_BRUTO] - fPedido[VLR_COFINS] - fPedido[VLR_ICMS] - fPedido[VLR_IPI] - fPedido[VLR_PIS])),
	/// FILTER('dDivisaoVendas','dDivisaoVendas'[TP_DIVISAO_VENDA] <> "Máquinas"))
	/// var FaturamentoMaquinas =
	/// CALCULATE(
	/// SUMX(fPedido,
	/// SWITCH(
	/// TRUE(),
	/// fPedido[VALOR_LIQUIDO_NF] <> BLANK(),
	/// ([VALOR_LIQUIDO_NF]*fPedido[QTDE_ATEND]),
	/// fPedido[VLR_BRUTO] - fPedido[VLR_ICMS] - fPedido[VLR_IPI])),
	/// FILTER('dDivisaoVendas','dDivisaoVendas'[TP_DIVISAO_VENDA] = "Máquinas"))
	/// return
	/// FaturamentoGeral + FaturamentoMaquinas
	measure 'VALOR LIQUIDO PDV' = ```
			
			var FaturamentoGeral = 
			        CALCULATE(
			                    SUMX(fPedido,
			                    SWITCH(
			                            TRUE(),
			                            fPedido[VALOR_LIQUIDO_NF] <> BLANK(),
			                            ([VALOR_LIQUIDO_NF]*fPedido[QTDE_ATEND]),
			                            fPedido[VLR_BRUTO] - fPedido[VLR_COFINS] - fPedido[VLR_ICMS] - fPedido[VLR_IPI] - fPedido[VLR_PIS])),
			                    FILTER('dDivisaoVendas','dDivisaoVendas'[TP_DIVISAO_VENDA] <> "Máquinas"))
			var FaturamentoMaquinas =
			        CALCULATE(
			                    SUMX(fPedido,
			                    SWITCH(
			                            TRUE(),
			                            fPedido[VALOR_LIQUIDO_NF] <> BLANK(),
			                            ([VALOR_LIQUIDO_NF]*fPedido[QTDE_ATEND]),
			                            fPedido[VLR_BRUTO] - fPedido[VLR_ICMS] - fPedido[VLR_IPI])),
			                    FILTER('dDivisaoVendas','dDivisaoVendas'[TP_DIVISAO_VENDA] = "Máquinas"))
			return
			FaturamentoGeral + FaturamentoMaquinas
			```
		formatString: "R$"\ #,0;-"R$"\ #,0;"R$"\ #,0
		lineageTag: deb8224d-042c-4a1c-8e51-621f707fb477

		annotation PBI_FormatHint = {"currencyCulture":"pt-BR"}

	/// 
	/// CALCULATE([VALOR LIQUIDO PDV],
	/// SAMEPERIODLASTYEAR(dCalendario[DT_DATA])
	/// )
	measure 'TOTAL VLR PEDIDOS LY' = ```
			
			CALCULATE([VALOR LIQUIDO PDV],
			          SAMEPERIODLASTYEAR(dCalendario[DT_DATA]) 
			          )
			```
		lineageTag: 5d670efe-52d9-4023-9cba-d87768011cfe

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// 
	/// SUMX (
	/// fPedido,
	/// SWITCH (
	/// TRUE (),
	/// fPedido[VALOR_LIQUIDO_NF] = 0 || fPedido[VALOR_LIQUIDO_NF] = BLANK (),
	/// ( ( fPedido[VLR_BRUTO] - fPedido[VLR_ICMS] - fPedido[VLR_IPI] - fPedido[VLR_PIS] - fPedido[VLR_COFINS] ) / fPedido[QTDE] ) * ( fPedido[QTDE] - fPedido[QTDE_ATEND] - fPedido[QTDE_CANC] ),
	/// ( fPedido[QTDE] - fPedido[QTDE_ATEND] - fPedido[QTDE_CANC] ) * [VALOR_LIQUIDO_NF]
	/// )
	/// )
	measure 'TOTAL VLR PEDIDO EM ABERTO' =
			
			SUMX (
			    fPedido,
			    SWITCH (
			        TRUE (),
			        fPedido[VALOR_LIQUIDO_NF] = 0 || fPedido[VALOR_LIQUIDO_NF] = BLANK (),
			         ( ( fPedido[VLR_BRUTO] - fPedido[VLR_ICMS] - fPedido[VLR_IPI] - fPedido[VLR_PIS] - fPedido[VLR_COFINS] ) / fPedido[QTDE] ) * ( fPedido[QTDE] - fPedido[QTDE_ATEND] - fPedido[QTDE_CANC] ),
			        ( fPedido[QTDE] - fPedido[QTDE_ATEND] - fPedido[QTDE_CANC] ) * [VALOR_LIQUIDO_NF]
			    )
			)
		formatString: "R$"\ #,0;-"R$"\ #,0;"R$"\ #,0
		lineageTag: 9e6fb1c1-82a4-446c-9a0f-a4bbc8bbf5fc

		annotation PBI_FormatHint = {"currencyCulture":"pt-BR"}

	/// [TOTAL VLR PEDIDO EM ABERTO]*divide([VALOR LIQUIDO PDV],[TOTAL VLR PEDIDO EM ABERTO],1)
	measure 'pendente revisado' = [TOTAL VLR PEDIDO EM ABERTO]*divide([VALOR LIQUIDO PDV],[TOTAL VLR PEDIDO EM ABERTO],1)
		formatString: "R$"\ #,0.00;-"R$"\ #,0.00;"R$"\ #,0.00
		lineageTag: 493d1b6d-d660-4d22-bdb9-30a79ef39325

		annotation PBI_FormatHint = {"currencyCulture":"pt-BR"}

	/// 
	/// CALCULATE(
	/// DISTINCTCOUNT(fPedidoItemMaq[NR_PEDIDO]),
	/// USERELATIONSHIP(fPedido[DT_ENTREGA],dCalendario[DT_DATA]),
	/// CROSSFILTER(fPedido[DT_EMISSAO],dCalendario[DT_DATA],NONE))
	measure 'MaqBacklog Pedidos' =
			
			CALCULATE(
			    DISTINCTCOUNT(fPedidoItemMaq[NR_PEDIDO]),
			    USERELATIONSHIP(fPedido[DT_ENTREGA],dCalendario[DT_DATA]),
			    CROSSFILTER(fPedido[DT_EMISSAO],dCalendario[DT_DATA],NONE))
		lineageTag: 62539131-7a3d-4450-a71b-c2ef291fd75c

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// 
	/// CALCULATE(
	/// DISTINCTCOUNT(fPedidoItemMaq[Pedido e Sequencia]),
	/// USERELATIONSHIP(fPedido[DT_ENTREGA],dCalendario[DT_DATA]),
	/// CROSSFILTER(fPedido[DT_EMISSAO],dCalendario[DT_DATA],NONE),
	/// fPedido[POS_PDV] = "Aberto")
	measure 'MaqBacklog Maquinas' = ```
			
			    CALCULATE(
			    DISTINCTCOUNT(fPedidoItemMaq[Pedido e Sequencia]),
			    USERELATIONSHIP(fPedido[DT_ENTREGA],dCalendario[DT_DATA]),
			    CROSSFILTER(fPedido[DT_EMISSAO],dCalendario[DT_DATA],NONE),
			    fPedido[POS_PDV] = "Aberto")
			```
		lineageTag: 2bcbdd82-7f48-4338-b088-f0be420b16db

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	/// 
	/// DIVIDE(
	/// Calculate(
	/// [MaqFaturado Maquinas],
	/// fPedido[POS_PDV]="Atendido Total",
	/// fPedido[POS_PDV] <> "Cancelado",
	/// 'dTipoNota'[DIM_TIPO_NOTA_ID] <> "510199",
	/// 'dTipoNota'[DIM_TIPO_NOTA_ID] <> "610199",
	/// 'dTipoNota'[DIM_TIPO_NOTA_ID] <> "611652"
	/// ),
	/// (
	/// Calculate(
	/// [MaqFaturado Maquinas],
	/// fPedido[POS_PDV]="Atendido Total",
	/// fPedido[POS_PDV] <> "Cancelado",
	/// 'dTipoNota'[DIM_TIPO_NOTA_ID] <> "510199",
	/// 'dTipoNota'[DIM_TIPO_NOTA_ID] <> "610199",
	/// 'dTipoNota'[DIM_TIPO_NOTA_ID] <> "611652"
	/// )
	/// +
	/// Calculate(
	/// [MaqBacklog Maquinas],
	/// fPedido[POS_PDV] <> "Cancelado",
	/// OR('dTipoNota'[DIM_TIPO_NOTA_ID] = "510199",
	/// 'dTipoNota'[DIM_TIPO_NOTA_ID] = "610199")
	/// )
	/// )
	/// 
	/// )
	/// 
	/// 
	measure 'MaqBacklog Maquinas 2' = ```
			
				DIVIDE(
					Calculate(
						[MaqFaturado Maquinas],
						fPedido[POS_PDV]="Atendido Total",        
						fPedido[POS_PDV] <> "Cancelado",
						'dTipoNota'[DIM_TIPO_NOTA_ID] <> "510199",
						'dTipoNota'[DIM_TIPO_NOTA_ID] <> "610199",
			            'dTipoNota'[DIM_TIPO_NOTA_ID] <> "611652"
					),
			        (			
			            Calculate(
							[MaqFaturado Maquinas],
							fPedido[POS_PDV]="Atendido Total",        
							fPedido[POS_PDV] <> "Cancelado",
							'dTipoNota'[DIM_TIPO_NOTA_ID] <> "510199",
							'dTipoNota'[DIM_TIPO_NOTA_ID] <> "610199",
			                'dTipoNota'[DIM_TIPO_NOTA_ID] <> "611652"
						)
			            +
						Calculate(
							[MaqBacklog Maquinas],        
							fPedido[POS_PDV] <> "Cancelado",
							OR('dTipoNota'[DIM_TIPO_NOTA_ID] = "510199",
							'dTipoNota'[DIM_TIPO_NOTA_ID] = "610199")
						)	
			        )
					
				)
				
			
			```
		formatString: #,0.00%;-#,0.00%;#,0.00%
		lineageTag: a9a1196f-6e58-498b-b3e9-cd70c9390062

	/// 
	/// VAR vUltimoDiaMesAtual = CALCULATE(MAX(xfMachinesControl[Emissão]),ALL(xfMachinesControl))
	/// 
	/// var vQtdefMaquinasPed =
	/// CALCULATE(
	/// COUNTROWS(fPedidoItemMaq),
	/// fPedidoItemMaq[DT EMISS VENDA] > vUltimoDiaMesAtual,
	/// USERELATIONSHIP(fVenda[PEDIDO],fPedidoItemMaq[NR_PEDIDO]),
	/// USERELATIONSHIP(fPedidoItemMaq[DT EMISS VENDA],dCalendario[DT_DATA]),
	/// CROSSFILTER(fPedido[NR_PEDIDO],fPedidoItemMaq[NR_PEDIDO],NONE)
	/// )
	/// 
	/// 
	/// var vQtdefMachinesControl = SUMX(xfMachinesControl,xfMachinesControl[Units])
	/// 
	/// return
	/// COALESCE(vQtdefMaquinasPed + vQtdefMachinesControl,0)
	/// 
	measure 'MaqFaturado Maquinas' = ```
			
			CALCULATE(
			    DISTINCTCOUNT( fPedido[NR_PEDIDO] ),
			
			    /* 1) Desativa o relacionamento ativo por data de emissão */
			    CROSSFILTER(
			      dCalendario[DT_DATA],
			      fPedido[DT_EMISSAO],
			      NONE
			    ),
			
			    /* 2) Ativa o relacionamento inativo por NF_DATA */
			    USERELATIONSHIP(
			      dCalendario[DT_DATA],
			      fPedido[NF_DATA]
			    ),
			
			    /* 3) Aplica todos os filtros para máquinas */
			    CONTAINSSTRING( fPedido[DIM_ITEM_ID], "EQ" ),
			    fPedido[POS_PDV] = "Atendido Total",
			    fPedido[TP_DIVISAO_VENDAS] = "Máquinas",
			    NOT CONTAINSSTRING( fPedido[CLIENTE] , "KOMATSU" ),
			    NOT CONTAINSSTRING( fPedido[DESC_DIVISAO_VENDA], "LOG MAX" )
			)
			
			```
		formatString: 0
		lineageTag: d07a4cf1-623d-4bf2-8784-0845099fab1e

		changedProperty = FormatString

	/// 
	/// COALESCE(CALCULATE(
	/// [TOTAL VLR VENDAS LIQ],
	/// //SUMX(fPedidoItemMaq,fPedidoItemMaq[VL_LIQ_IT]),
	/// USERELATIONSHIP(fPedidoItemMaq[NR_PEDIDO],fVenda[PEDIDO]),
	/// CROSSFILTER(fPedido[NR_PEDIDO],fPedidoItemMaq[NR_PEDIDO],NONE)
	/// ),0)
	measure 'MaqFaturado Valor Liq' =
			
			CALCULATE(
			    SUM(fPedido[VALOR_LIQUIDO_NF]),
			
			    /* 1) Desativa o relacionamento ativo por data de emissão */
			    CROSSFILTER(
			      dCalendario[DT_DATA],
			      fPedido[DT_EMISSAO],
			      NONE
			    ),
			
			    /* 2) Ativa o relacionamento inativo por NF_DATA */
			    USERELATIONSHIP(
			      dCalendario[DT_DATA],
			      fPedido[NF_DATA]
			    ),
			
			    /* 3) Aplica todos os filtros para máquinas */
			    CONTAINSSTRING( fPedido[DIM_ITEM_ID], "EQ" ),
			    fPedido[POS_PDV] = "Atendido Total",
			    fPedido[TP_DIVISAO_VENDAS] = "Máquinas",
			    NOT CONTAINSSTRING( fPedido[CLIENTE] , "KOMATSU" ),
			    NOT CONTAINSSTRING( fPedido[DESC_DIVISAO_VENDA], "LOG MAX" )
			)
		formatString: "R$"\ #,0;-"R$"\ #,0;"R$"\ #,0
		lineageTag: 5971f4e4-aa79-4ccb-9303-a7b5cb855b2d

		changedProperty = FormatString

		annotation PBI_FormatHint = {"currencyCulture":"pt-BR"}

	/// 
	/// IF('MEDIDAS PEDIDOS'[MaqFaturado Maquinas] <> BLANK(),'MEDIDAS PEDIDOS'[MaqFaturado Maquinas],0)
	measure 'MaqFaturado Maquinas Cartão' =
			
			IF('MEDIDAS PEDIDOS'[MaqFaturado Maquinas] <> BLANK(),'MEDIDAS PEDIDOS'[MaqFaturado Maquinas],0)
		formatString: 0
		lineageTag: 890ff208-1aaa-4c03-85a7-2918d452de97

		annotation PBI_FormatHint = {"isDecimal":true}

	/// IF('MEDIDAS PEDIDOS'[MaqBacklog Maquinas 2]<>BLANK(),'MEDIDAS PEDIDOS'[MaqBacklog Maquinas 2],0)
	measure 'MaqBacklog Maquinas Cartão' = IF('MEDIDAS PEDIDOS'[MaqBacklog Maquinas 2]<>BLANK(),'MEDIDAS PEDIDOS'[MaqBacklog Maquinas 2],0)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: e4337423-bd61-4c44-987d-dd8af73b00c0

	/// 
	/// CALCULATE(
	/// SUMX(fPedidoItemMaq,fPedidoItemMaq[VL_LIQ_IT_REAL]),
	/// USERELATIONSHIP(fPedido[DT_ENTREGA],dCalendario[DT_DATA]),
	/// CROSSFILTER(fPedido[DT_EMISSAO],dCalendario[DT_DATA],NONE),
	/// fPedido[POS_PDV] = "Aberto",
	/// fPedido[DIM_TIPO_NOTA_ID] = "510199" || fPedido[DIM_TIPO_NOTA_ID] = "610199"
	/// )
	measure 'MaqBacklog Valor Liq Backlog_Real' =
			
			CALCULATE(
			    SUMX(fPedidoItemMaq,fPedidoItemMaq[VL_LIQ_IT_REAL]),
			    USERELATIONSHIP(fPedido[DT_ENTREGA],dCalendario[DT_DATA]),
			    CROSSFILTER(fPedido[DT_EMISSAO],dCalendario[DT_DATA],NONE),
			    fPedido[POS_PDV] = "Aberto",
			    fPedido[DIM_TIPO_NOTA_ID] = "510199" || fPedido[DIM_TIPO_NOTA_ID] = "610199"
			)
		lineageTag: 395e2174-508d-4ce9-b991-3d7cce3eac75

	/// 
	/// CALCULATE(
	/// SUMX(fVendasPedidoMes,fVendasPedidoMes[VL Liquido]),
	/// USERELATIONSHIP(fVendasPedidoMes[PEDIDO],fPedido[NR_PEDIDO])
	/// )
	measure 'Faturamento Pedidos2' = ```
			
			    CALCULATE(
			        SUMX(fVendasPedidoMes,fVendasPedidoMes[VL Liquido]),
			                USERELATIONSHIP(fVendasPedidoMes[PEDIDO],fPedido[NR_PEDIDO])
			        )
			```
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		lineageTag: fa49a02d-edd2-4c80-b966-9d7562179054

	partition 'MEDIDAS PEDIDOS-57a0dfd7-1928-4468-bd47-7a4ff8d419af' = m
		mode: import
		source =
				let
				    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [#"Coluna 1" = _t]),
				    #"Tipo Alterado" = Table.TransformColumnTypes(Fonte,{{"Coluna 1", type text}}),
				    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado",{"Coluna 1"})
				in
				    #"Colunas Removidas"

	annotation PBI_ResultType = Table

